<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.unknown.paldak.admin.mapper.AdminBenefitsMapper">
    <select id="getList" 
    	resultType="com.unknown.paldak.admin.domain.BenefitsVO">
        select * from tbl_benefits where benefitsId > 0 order by benefitsId desc
    </select>
    

    <insert id="insertSelectKey" 
    	parameterType="com.unknown.paldak.admin.domain.BenefitsVO">
        <selectKey keyProperty="benefitsId" order="BEFORE" resultType="long">
            select seq_benefits.nextval from dual
        </selectKey>
        INSERT INTO tbl_benefits (benefitsId, benefitsDescription, benefitsWriter)
        VALUES (
	        #{benefitsId},
	        #{benefitsDescription},
	        #{benefitsWriter}
        )
    </insert>

    <select id="read" 
    	parameterType="long" 
    	resultType="com.unknown.paldak.admin.domain.BenefitsVO">
        select * from tbl_benefits where benefitsId = #{benefitsId}
    </select>

    <delete id="delete" parameterType="long">
        delete from tbl_benefits where benefitsId = #{benefitsId}
    </delete>

    <update id="update" parameterType="com.unknown.paldak.admin.domain.BenefitsVO">
        update tbl_benefits 
        set benefitsDescription=#{benefitsDescription}, benefitsWriter=#{benefitsWriter}
        where benefitsId=#{benefitsId}
    </update>


    <sql id="criterial">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'B'.toString()">
							i.benefitsId like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							i.benefitsWriter like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'D'.toString()">
							TO_CHAR(benefitsRegDate, 'YYYY-MM-DD')= #{keyword}
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>


    
    <select id="getListWithPaging" 
    	parameterType="com.unknown.paldak.admin.common.domain.Criteria" 
    	resultType="com.unknown.paldak.admin.domain.BenefitsVO">
        <![CDATA[
            SELECT *
				FROM (
				    SELECT
				        i.*, ROWNUM AS rn
				    FROM (
				        SELECT
				            b.benefitsId,
				            b.benefitsDescription,
				            b.benefitsWriter,
				            b.benefitsRegDate,
				            r.answer
				        FROM
				            tbl_benefits b
				        left JOIN
				            tbl_benefits_reply r
				        ON
				            b.benefitsId = r.benefitsId
				        ORDER BY
	           ]]> 

		         <choose>
			        <when test="sortColumn != null and sortColumn == 'answer'">
			            <![CDATA[ r.answer ]]>
			        </when>
			        <when test="sortColumn != null and sortColumn == 'benefitsDescription'">
			            <![CDATA[ b.benefitsDescription ]]>
			        </when>
			        <when test="sortColumn != null and sortColumn == 'benefitsWriter'">
			            <![CDATA[ b.benefitsWriter ]]>
			        </when>
			        <when test="sortColumn != null and sortColumn == 'benefitsRegDate'">
			            <![CDATA[ b.benefitsRegDate ]]>
			        </when>
			        <otherwise>
			        	<![CDATA[ b.benefitsId ]]>
			        </otherwise>
			     </choose>
			     <choose>
			     	<when test="sortType != null and sortType == 'desc'">
			            <![CDATA[ desc ]]>
			        </when>
			        <otherwise>
			        	<![CDATA[ asc  ]]>
			        </otherwise>
		         </choose>
		         <![CDATA[ nulls last ) i
								WHERE
		        ]]>
		            <include refid="criterial"></include>
		       	<![CDATA[ 
		            rownum <=  #{pageNum} * #{amount}
		            ) where rn > (#{pageNum}-1) * #{amount}
		        ]]>
    </select>

     <select id="getTotalCount" resultType="int">
    	SELECT COUNT(*)
		FROM tbl_benefits i
		left JOIN tbl_benefits_reply s ON i.benefitsId = s.benefitsId
		where <include refid="criterial"></include>
		1 = 1
	</select>
</mapper>
