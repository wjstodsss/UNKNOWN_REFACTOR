<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: 다른 모든 웹 컴포넌트에서 사용 가능한 공유 리소스 정의 -->

	<!-- HikariCP 구성 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- 데이터베이스 드라이버 클래스와 접속 URL 설정 -->
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE" />

		<!-- 데이터베이스 접속 계정 정보 설정 -->
		<property name="username" value="Unknown" />
		<property name="password" value="12341234" />
	</bean>

	<!-- 트랜잭션 설정 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<!-- HikariCP를 사용한 데이터베이스 커넥션 풀을 생성하는 빈 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<!-- MyBatis SqlSessionFactoryBean 설정 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</bean>

	<!-- mybatis-spring:scan 은 MyBatis와 Spring을 통합할 때 Mapper 인터페이스를 자동으로 찾아 
		MyBatis에 등록하는 역할 -->
	<!-- org.zerock.mapper 패키지 내의 MyBatis 매퍼 인터페이스를 자동으로 스캔하는 설정 -->
	<mybatis-spring:scan
		base-package="com.unknown.mapper" />

	<tx:annotation-driven />

	<task:annotation-driven />

	<!-- Component scan 설정 추가 -->
	<context:component-scan
		base-package="com.unknown.sample" />
	<context:component-scan
		base-package="com.unknown.service" />
	<context:component-scan
		base-package="com.unknown.model" />
	<context:component-scan
		base-package="com.unknown.util" />
	<context:component-scan
		base-package="com.unknwon.task"></context:component-scan>
<mybatis-spring:scan base-package="com.unknown.paldak.admin.mapper" />
	<!-- naver mail설정 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" /> <!-- 메이서버 호스트 -->
		<property name="port" value="465" /> <!-- 메이서버 포트번호 -->
		<property name="username" value="dhkim0147@naver.com" /> <!-- 자신의 이메일 아이디 -->
		<property name="password" value="ehgnsdl12" /> <!-- 자신의 비밀번호 -->
		<!-- 보안연결 SSL과 관련된 설정 -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtps.checkserveridentity">true</prop>
				<prop key="mail.smtps.ssl.trust">*</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean>

	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="10" />
	</bean>


</beans>
