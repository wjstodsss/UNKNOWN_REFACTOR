<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unknown.mapper.OrderMapper">

	<!-- 주문 결과 매핑 -->
	<resultMap id="orderResultMap"
		type="com.unknown.model.OrderDTO">
		<id property="orderId" column="orderId" />
		<result property="receiver" column="receiver" />
		<result property="memberId" column="memberId" />
		<result property="memberAddr1" column="memberAddr1" />
		<result property="memberAddr2" column="memberAddr2" />
		<result property="memberAddr3" column="memberAddr3" />
		<result property="orderState" column="orderState" />
		<result property="deliveryCost" column="deliveryCost" />
		<result property="usePoint" column="usePoint" />
		<result property="orderDate" column="orderDate" />
		<result property="orderSalePrice" column="orderSalePrice" />
		<result property="orderEarnPoint" column="orderEarnPoint" />
		<result property="orderFinalSalePrice"
			column="orderFinalSalePrice" />
	</resultMap>

	<!-- 주문 상품 정보 -->
	<select id="getGoodsInfo"
		resultType="com.unknown.model.OrderPageItemDTO">
		select itemId, itemName, itemPrice, itemDiscount
		from
		tbl_item
		where itemId = #{itemId}
	</select>

	<select id="getOrderInfo"
		resultType="com.unknown.model.OrderItemDTO">
		select itemId, itemPrice, itemDiscount
		from tbl_item
		where
		itemId = #{itemId}
	</select>

	<!-- 주문 테이블 등록 -->
	<insert id="enrollOrder">
		insert into tbl_order(orderId, receiver, memberId,
		memberAddr1, memberAddr2,
		memberAddr3, orderState, deliveryCost,
		usePoint)
		values(#{orderId}, #{receiver}, #{memberId}, #{memberAddr1},
		#{memberAddr2}, #{memberAddr3}, '배송준비', #{deliveryCost}, #{usePoint})
	</insert>

	<!-- 주문 아이템 테이블 등록 -->
	<insert id="enrollOrderItem">
		INSERT INTO tbl_orderItem (
		orderItemId,
		orderId,
		itemId,
		itemCount,
		itemPrice,
		itemDiscount,
		earnPoint
		) VALUES (
		seq_orderItemId.nextval,
		#{orderId},
		#{itemId},
		#{itemCount},
		#{itemPrice},
		#{itemDiscount},
		#{earnPoint}
		)
	</insert>

	<!-- 주문 재고 차감 -->
	<update id="deductStock">
		update tbl_item set itemStock = #{itemStock} where
		itemId = #{itemId}
	</update>

	<!-- 주문취소 -->
	<update id="orderCancle">
		update tbl_order set orderState = '주문취소' where
		orderId = #{orderId}
	</update>

	<!-- 주문 상품 정보(주문취소) -->
	<select id="getOrderItemInfo"
		resultType="com.unknown.model.OrderItemDTO">
		select * from tbl_orderItem where orderId = #{orderId}
	</select>

	<!-- 주문 정보(주문 취소) -->
	<select id="getOrder" resultType="com.unknown.model.OrderDTO">
		select * from tbl_order where
		orderId = #{orderId}
	</select>

	<!-- 주문 정보 조회 -->
	<select id="getOrdersByMemberIdAndDateRange"
		resultMap="orderResultMap">
		SELECT * FROM tbl_order
		WHERE memberId = #{memberId}
		AND
		orderDate BETWEEN #{startDate} AND #{endDate}
	</select>

	<select id="getOrdersByMemberId" resultMap="orderResultMap">
		SELECT * FROM
		tbl_order WHERE memberId = #{memberId}
	</select>

	<select id="getOrderItemsByMemberId"
		resultType="com.unknown.model.OrderItemDTO">
		SELECT oi.*, o.orderDate
		FROM tbl_order o
		JOIN tbl_orderItem
		oi ON o.orderId = oi.orderId
		WHERE o.memberId = #{memberId}
	</select>

	<!-- 주문 정보와 관련된 이미지 조회 -->
	<select id="getImageListByOrderId"
		resultType="com.unknown.model.AttachImageVO">
		SELECT uploadPath, uuid, fileName, itemId
		FROM tbl_image
		WHERE orderId = #{orderId}
	</select>

	<!-- 주문 상품 정보 -->
	<select id="getOrderItemsByOrderId"
		resultType="com.unknown.model.OrderItemDTO">
		SELECT oi.*, i.itemName, ai.uploadPath, ai.uuid,
		ai.fileName
		FROM tbl_orderItem oi
		JOIN tbl_item i ON oi.itemId =
		i.itemId
		LEFT JOIN tbl_itemImage ai ON i.itemId = ai.itemId
		WHERE
		oi.orderId = #{orderId}
	</select>

	<select id="getCanceledOrdersByMemberIdAndDateRange"
		resultMap="orderResultMap">
		SELECT * FROM tbl_order
		WHERE memberId = #{memberId}
		AND orderState = '주문취소'
		AND orderDate BETWEEN #{startDate} AND #{endDate}
	</select>


</mapper>
